<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Filtrage Numérique</title>
    <link>https://vincentchoqueuse.github.io/MOOC_filtrage_numerique/</link>
    <description>Recent content on Filtrage Numérique</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr-fr</language><atom:link href="https://vincentchoqueuse.github.io/MOOC_filtrage_numerique/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Python Cheatsheet</title>
      <link>https://vincentchoqueuse.github.io/MOOC_filtrage_numerique/snippests/python/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vincentchoqueuse.github.io/MOOC_filtrage_numerique/snippests/python/</guid>
      <description>La librairie Python scipy contient tous les outils nécessaire pour l&amp;rsquo;analyse et l&amp;rsquo;implémentation des filtres. La fonction dlti permet la création de filtre numérique à partir de la forme polynomiale ou factorisée (voir doc).
Pôles et zéros Les pôles et les zéros sont des attributs de l&amp;rsquo;objet dlti.
from scipy import signal H = signal.dlti([0.065,0.13,0.065],[1,-1.143,0.413]) print(&amp;#34;Poles : {}&amp;#34;.format(H.poles)) print(&amp;#34;Zeros : {}&amp;#34;.format(H.zeros)) Réponses Temporelles Les réponses temporelles (impulsionnelle, indicielle) s&amp;rsquo;obtiennent facilement en utilisant les méthodes impulse ou step de l&amp;rsquo;objet lti.</description>
    </item>
    
    <item>
      <title>Introduction</title>
      <link>https://vincentchoqueuse.github.io/MOOC_filtrage_numerique/cours/introduction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vincentchoqueuse.github.io/MOOC_filtrage_numerique/cours/introduction/</guid>
      <description>Un filtre permet de &amp;ldquo;sculpter&amp;rdquo; un signal en supprimant ou en accentuant certaines composantes fréquentielles. Alors que les filtres analogiques reposent sur la conception de circuits électroniques, les filtres numériques eux sont souvent plus simples à mettre en oeuvre car ils reposent sur des algorithmes pouvant être codés dans n&amp;rsquo;importe quel langage de programmation (même si le C reste la norme pour les applications embarquées). Dans ce document, nous allons nous intéresser à la synthèse de filtres numériques à une entrée et une sortie.</description>
    </item>
    
    <item>
      <title>Analyse dans le domaine Z</title>
      <link>https://vincentchoqueuse.github.io/MOOC_filtrage_numerique/cours/chapitre1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vincentchoqueuse.github.io/MOOC_filtrage_numerique/cours/chapitre1/</guid>
      <description>Dans cette section, nous allons introduire les outils nécessaires pour l&amp;rsquo;analyse des filtres numériques. Pour illustrer le contenu de cette section, nous allons considérer un exemple de filtre d&amp;rsquo;ordre 2.
Exemple (Filtre 1)
Le filtre 1 est décrit par l&#39;équation aux différences $$ y[n]=0.065x[n]+0.13 x[n-1]+0.065x[n-2]+1.143y[n-1]-0.413y[n-2]. $$  Transformée en Z Définition (Transformée en $\mathcal{Z}$)
La transformée en $\mathcal{Z}$ d&#39;une suite numérique $x[n]$ est définie par l&#39;équation $$X(z)\triangleq \sum_{n=-\infty}^{\infty}x[n]z^{-n}$$ où $z$ est une variable complexe.</description>
    </item>
    
    <item>
      <title>Analyse Fréquentielle</title>
      <link>https://vincentchoqueuse.github.io/MOOC_filtrage_numerique/cours/chapitre2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vincentchoqueuse.github.io/MOOC_filtrage_numerique/cours/chapitre2/</guid>
      <description>Le domaine fréquentielle est un domaine particulièrement utilisé pour analyser le comportement des filtres LTI. Le succès de ce domaine d&amp;rsquo;analyse est principalement lié à la propriété suivante.
Propriété
La réponse d&#39;un filtre LTI à une exponentielle complexe $x[n]=e^{jn\Omega}$ de pulsation normalisée $\Omega=\omega T_e$ est une exponentielle complexe de même pulsation multipliée par un coefficient complexe : $$y[n]=H(e^{j\Omega}) e^{jn\Omega} $$
où $H(e^{j\Omega})$ est appelé réponse fréquentielle du système.
 Réponse Fréquentielle Mathématiquement, la réponse fréquentielle d&amp;rsquo;un filtre LTI de réponse impulsionnelle $h[n]$ est définie par</description>
    </item>
    
  </channel>
</rss>
